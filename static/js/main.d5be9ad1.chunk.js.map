{"version":3,"sources":["contexts/UserContext.js","components/LayoutSimple.jsx","contexts/CustomerListContext.js","contexts/EditCustomerContext.js","data/UserKit.js","components/FormStyledInput.jsx","components/EditButton.jsx","components/CustomerDetailEdit.jsx","components/CustomerDetailInfo.jsx","validationSchemas/createCustomerSchema.js","components/CustomerDetails.jsx","components/ButtonStyled.jsx","pages/CustomerDetailPage.jsx","components/CustomerListItem.jsx","components/CustomerList.jsx","components/FormCreateCustomer.jsx","pages/HomePage.jsx","atoms/HeadingPage.jsx","pages/LoginPage.jsx","validationSchemas/registerSchema.js","components/FormRegister.jsx","pages/RegisterPage.jsx","pages/StartPage.jsx","styles/theme.js","styles/GlobalStyles.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","createContext","MainContent","styled","main","HeaderStyled","header","props","theme","christalle","Heading","h1","UserWrapper","div","IconWrapper","LayoutSimple","children","user","useContext","size","firstName","lastName","email","CustomerListContext","EditCustomerContext","ROOT_URL","UserKit","registrationData","url","payload","fetch","method","headers","this","getPublicHeaders","body","JSON","stringify","uid","token","password","getPrivateHeaders","id","data","localStorage","setItem","getItem","Authorization","getToken","InputStyled","input","LabelStyled","label","Error","span","terraCotta","FormStyledInput","name","placeholder","register","inputType","error","type","ref","Button","button","EditButton","action","onClick","EditContainer","Form","form","ButtonWrapper","CustomerDetailEdit","handleEdit","keyName","defaultValue","schema","useForm","resolver","yupResolver","handleSubmit","errors","setValue","edit","setEdit","useEffect","onSubmit","message","color","Container","Label","p","CustomerDetailInfo","stateValue","vatNrRegex","RegExp","createCustomerSchema","yup","shape","required","trim","min","max","organisationNr","length","paymentTerm","typeError","integer","vatNr","matches","blackcurrant","CustomerDetails","customer","userKit","customerId","useState","checkIfNull","setName","setOrganisationNr","setVatNr","reference","setReference","setPaymentTerm","website","setWebsite","setEmail","phoneNumber","value","inputList","setStateValue","Object","keys","updateCustomerDetails","then","setStateFunc","find","renderDetails","validationSchema","fields","key","map","inputItem","buttonCSS","css","ButtonStyled","title","onClickFunc","PageWrapper","DeleteButton","CustomerDetailPage","customerObj","setCustomerObj","match","params","history","useHistory","getCustomerDetails","res","json","Provider","deleteCustomerDetails","push","ListItem","li","white","Name","mulberry","CustomerListItem","to","UlStyled","ul","CustomerList","customerList","setCustomerList","getCustomerList","results","FormWapper","FormStyled","FormCreateCustomer","reset","createCustomer","Wrapper","HomePage","setUser","getUser","h2","HeadingPage","LoginError","LoginPage","setError","searchString","location","search","urlParameters","URLSearchParams","get","setUid","setToken","activateUser","loginEmail","loginPassword","login","ok","credentials","registerSchema","organisationName","organisationKind","RegisterError","FormRegister","setHasRegistered","inputObjects","checkEmailExits","registerError","index","myProps","RegisterPage","hasRegistered","StartPage","summerSky","regalBlue","lightSkyBlue","whiteSmoke","suvaGrey","dodgerBlue","GlobalStyles","createGlobalStyle","App","path","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.d5be9ad1.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const UserContext = createContext({});\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { UserContext } from \"../contexts/UserContext\";\r\n\r\nimport { RiUser3Fill } from \"react-icons/ri\";\r\n\r\nconst MainContent = styled.main`\r\n  padding: 0.5rem;\r\n\r\n  @media only screen and (min-width: 600px) {\r\n    padding: 1rem;\r\n  }\r\n`;\r\n\r\nconst HeaderStyled = styled.header`\r\n  padding: 1em;\r\n  background-color: ${(props) => props.theme.christalle};\r\n  color: white;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\nconst Heading = styled.h1`\r\n  font-size: 1em;\r\n\r\n  @media only screen and (min-width: 600px) {\r\n    font-size: 2em;\r\n  }\r\n`;\r\n\r\nconst UserWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 12px;\r\n`;\r\nconst IconWrapper = styled.div`\r\n  padding: 5px 10px;\r\n  line-height: 0;\r\n`;\r\n\r\nexport default function LayoutSimple({ children }) {\r\n  const { user } = useContext(UserContext);\r\n  return (\r\n    <div>\r\n      <HeaderStyled>\r\n        <Heading>Business Management</Heading>\r\n        <UserWrapper>\r\n          {user && (\r\n            <>\r\n              <IconWrapper>\r\n                <RiUser3Fill size={30} />\r\n              </IconWrapper>\r\n              <div>\r\n                <p>\r\n                  {user.firstName} {user.lastName}\r\n                </p>\r\n                <p>{user.email}</p>\r\n              </div>\r\n            </>\r\n          )}\r\n        </UserWrapper>\r\n      </HeaderStyled>\r\n\r\n      <MainContent>{children}</MainContent>\r\n    </div>\r\n  );\r\n}\r\n","import { createContext } from \"react\";\r\n\r\nexport const CustomerListContext = createContext({});\r\n","import { createContext } from \"react\";\r\n\r\nexport const EditCustomerContext = createContext({});\r\n","const ROOT_URL = \"https://frebi.willandskill.eu/\";\r\n\r\nexport default class UserKit {\r\n  async register(registrationData) {\r\n    const url = `${ROOT_URL}auth/users/`;\r\n\r\n    const payload = registrationData;\r\n    return fetch(url, {\r\n      method: \"POST\",\r\n      headers: this.getPublicHeaders(),\r\n      body: JSON.stringify(payload),\r\n    });\r\n  }\r\n\r\n  async checkEmailExits(email) {\r\n    const url = `${ROOT_URL}api/v1/check-email-exists/`;\r\n\r\n    const payload = { email };\r\n    return fetch(url, {\r\n      method: \"POST\",\r\n      headers: this.getPublicHeaders(),\r\n      body: JSON.stringify(payload),\r\n    });\r\n  }\r\n\r\n  async activateUser(uid, token) {\r\n    const url = `${ROOT_URL}auth/users/activate/`;\r\n    const payload = {\r\n      uid,\r\n      token,\r\n    };\r\n\r\n    return fetch(url, {\r\n      method: \"POST\",\r\n      headers: this.getPublicHeaders(),\r\n      body: JSON.stringify(payload),\r\n    });\r\n  }\r\n\r\n  async login(email, password) {\r\n    const url = `${ROOT_URL}api-token-auth/`;\r\n\r\n    const payload = { email, password };\r\n\r\n    return fetch(url, {\r\n      method: \"POST\",\r\n      headers: this.getPublicHeaders(),\r\n      body: JSON.stringify(payload),\r\n    });\r\n  }\r\n\r\n  async getUser() {\r\n    const url = `${ROOT_URL}api/v1/me`;\r\n\r\n    return fetch(url, {\r\n      headers: this.getPrivateHeaders(),\r\n    });\r\n  }\r\n  async getCustomerList() {\r\n    const url = `${ROOT_URL}api/v1/customers`;\r\n\r\n    return fetch(url, {\r\n      headers: this.getPrivateHeaders(),\r\n    });\r\n  }\r\n  async getCustomerDetails(id) {\r\n    const url = `${ROOT_URL}api/v1/customers/${id}/`;\r\n\r\n    return fetch(url, {\r\n      headers: this.getPrivateHeaders(),\r\n    });\r\n  }\r\n  async deleteCustomerDetails(id) {\r\n    const url = `${ROOT_URL}api/v1/customers/${id}/`;\r\n\r\n    return fetch(url, {\r\n      method: \"DELETE\",\r\n      headers: this.getPrivateHeaders(),\r\n    });\r\n  }\r\n  async updateCustomerDetails(id, payload) {\r\n    const url = `${ROOT_URL}api/v1/customers/${id}/`;\r\n\r\n    return fetch(url, {\r\n      method: \"PATCH\",\r\n      headers: this.getPrivateHeaders(),\r\n      body: JSON.stringify(payload),\r\n    });\r\n  }\r\n  async createCustomer(data) {\r\n    const url = `${ROOT_URL}api/v1/customers`;\r\n    const payload = data;\r\n\r\n    return fetch(url, {\r\n      method: \"POST\",\r\n      headers: this.getPrivateHeaders(),\r\n      body: JSON.stringify(payload),\r\n    });\r\n  }\r\n\r\n  setToken(token) {\r\n    localStorage.setItem(\"BUSINESS_TOKEN\", token);\r\n  }\r\n  getToken() {\r\n    return localStorage.getItem(\"BUSINESS_TOKEN\");\r\n  }\r\n  getPublicHeaders() {\r\n    return {\r\n      \"Content-Type\": \"application/json\",\r\n    };\r\n  }\r\n  getPrivateHeaders() {\r\n    return {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${this.getToken()}`,\r\n    };\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst InputStyled = styled.input`\r\n  appearance: none;\r\n  border: none;\r\n  border-radius: 3px;\r\n  box-shadow: 0 2px 4px 0 rgba(201, 201, 201, 0.5);\r\n  padding: 0.5em 0.8em;\r\n  width: 100%;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\nconst LabelStyled = styled.label`\r\n  color: white;\r\n  display: block;\r\n  font-size: 0.9em;\r\n  font-weight: 200;\r\n`;\r\nexport const Error = styled.span`\r\n  color: ${(props) => props.theme.terraCotta};\r\n  font-size: 0.8em;\r\n  font-weight: 300;\r\n`;\r\n\r\nexport default function FormStyledInput({\r\n  label,\r\n  name,\r\n  placeholder,\r\n  register,\r\n  inputType,\r\n  error,\r\n}) {\r\n  const type = inputType ? inputType : \"text\";\r\n  return (\r\n    <div>\r\n      <LabelStyled>{label}</LabelStyled>\r\n\r\n      <InputStyled\r\n        name={name}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        ref={register}\r\n      />\r\n      {error && <Error>{error}</Error>}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  appearance: none;\r\n  box-shadow: 0px 2px 7px 1px rgba(0, 0, 0, 0.5);\r\n  background-color: white;\r\n  border: none;\r\n  border-radius: 50%;\r\n  padding: 8px;\r\n  line-height: 0;\r\n  transition: all 0.2s ease-in-out;\r\n\r\n  :hover {\r\n    @media only screen and (min-width: 600px) {\r\n      cursor: pointer;\r\n      transform: scale(1.1);\r\n    }\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport default function EditButton({ children, action }) {\r\n  return <Button onClick={action}>{children}</Button>;\r\n}\r\n","import { yupResolver } from \"@hookform/resolvers\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { FiCheck, FiX } from \"react-icons/fi\";\r\nimport styled from \"styled-components\";\r\nimport { EditCustomerContext } from \"../contexts/EditCustomerContext\";\r\nimport FormStyledInput from \"./FormStyledInput\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport EditButton from \"./EditButton\";\r\n\r\nconst EditContainer = styled.div`\r\n  -ms-touch-action: manipulation;\r\n  touch-action: manipulation;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  align-items: flex-end;\r\n\r\n  justify-content: space-between;\r\n`;\r\nconst ButtonWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-auto-rows: 1fr;\r\n  gap: 5px;\r\n  align-items: center;\r\n  justify-items: center;\r\n  padding: 0.2em 0 0.2em 10px;\r\n`;\r\n\r\nexport default function CustomerDetailEdit({\r\n  handleEdit,\r\n  keyName,\r\n  defaultValue,\r\n  label,\r\n  inputType,\r\n  schema,\r\n}) {\r\n  const { register, handleSubmit, errors, setValue } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n  const { edit, setEdit } = useContext(EditCustomerContext);\r\n\r\n  useEffect(() => {\r\n    setValue(keyName, defaultValue);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    <EditContainer>\r\n      <Form onSubmit={handleSubmit(handleEdit)}>\r\n        <FormStyledInput\r\n          label={label}\r\n          name={keyName}\r\n          register={register}\r\n          inputType={inputType}\r\n          error={errors[keyName]?.message}\r\n        />\r\n        <ButtonWrapper>\r\n          <EditButton type=\"submit\">\r\n            <FiCheck color=\"green\" size=\"20\" />\r\n          </EditButton>\r\n          <EditButton\r\n            action={() => {\r\n              setEdit({ ...edit, [keyName]: false });\r\n            }}\r\n          >\r\n            <FiX color=\"red\" size=\"20\" />\r\n          </EditButton>\r\n        </ButtonWrapper>\r\n      </Form>\r\n    </EditContainer>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { FiEdit } from \"react-icons/fi\";\r\nimport styled from \"styled-components\";\r\nimport { EditCustomerContext } from \"../contexts/EditCustomerContext\";\r\nimport EditButton from \"./EditButton\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst Label = styled.p`\r\n  font-weight: 200;\r\n  font-size: 0.9em;\r\n`;\r\n\r\nexport default function CustomerDetailInfo({ stateValue, keyName, label }) {\r\n  const { edit, setEdit } = useContext(EditCustomerContext);\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <Label>{label}</Label>\r\n        <p>{stateValue}</p>\r\n      </div>\r\n      <EditButton\r\n        action={() => {\r\n          setEdit({ ...edit, [keyName]: true });\r\n        }}\r\n      >\r\n        <FiEdit color=\"#E0A000\" size=\"20\" />\r\n      </EditButton>\r\n    </Container>\r\n  );\r\n}\r\n","import * as yup from \"yup\";\r\nconst vatNrRegex = RegExp(/^(SE)?[0-9]{12}$/);\r\n\r\nexport const createCustomerSchema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .required(\"Name is required.\")\r\n    .trim()\r\n    .min(1, \"Name must be at least 1 character.\")\r\n    .max(50, `Name can't be more than 50 character.`),\r\n  organisationNr: yup\r\n    .string()\r\n    .trim()\r\n    .length(\r\n      10,\r\n      `The organisation number must be 10 digits without spaces in between.`\r\n    ),\r\n  paymentTerm: yup\r\n    .number()\r\n    .typeError(\"Payment Term is required.\")\r\n    .integer(\"Payment Term must be un integer\")\r\n    .min(0, \"Payment Term must be a positive number, at least 0.\")\r\n    .required(\"Payment Term is required.\"),\r\n  email: yup.string().email(),\r\n  vatNr: yup\r\n    .string()\r\n    .matches(vatNrRegex, \"VAT Nr must follow this fotmat: SE999999999901\"),\r\n  /* website: yup.string().url(), */\r\n});\r\n","import * as yup from \"yup\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { EditCustomerContext } from \"../contexts/EditCustomerContext\";\r\nimport UserKit from \"../data/UserKit\";\r\nimport CustomerDetailEdit from \"./CustomerDetailEdit\";\r\nimport CustomerDetailInfo from \"./CustomerDetailInfo\";\r\nimport { createCustomerSchema } from \"../validationSchemas/createCustomerSchema\";\r\n\r\nconst Container = styled.div`\r\n  background-color: ${(props) => props.theme.blackcurrant};\r\n  padding: 2em;\r\n  display: grid;\r\n  gap: 1em;\r\n  color: white;\r\n\r\n  @media screen and (max-width: 767px) {\r\n    padding: 1em;\r\n  }\r\n`;\r\n\r\nexport default function CustomerDetails({ customer }) {\r\n  const userKit = new UserKit();\r\n\r\n  const { edit, setEdit } = useContext(EditCustomerContext);\r\n\r\n  const customerId = customer.id;\r\n\r\n  const [name, setName] = useState(checkIfNull(customer.name));\r\n  const [organisationNr, setOrganisationNr] = useState(\r\n    checkIfNull(customer.organisationNr)\r\n  );\r\n  const [vatNr, setVatNr] = useState(checkIfNull(customer.vatNr));\r\n  const [reference, setReference] = useState(checkIfNull(customer.reference));\r\n  const [paymentTerm, setPaymentTerm] = useState(customer.paymentTerm);\r\n  const [website, setWebsite] = useState(checkIfNull(customer.website));\r\n  const [email, setEmail] = useState(checkIfNull(customer.email));\r\n  const [phoneNumber, setPhoneNumber] = useState(\r\n    checkIfNull(customer.phoneNumber)\r\n  );\r\n\r\n  function checkIfNull(value) {\r\n    return value === null ? \"\" : value;\r\n  }\r\n\r\n  const inputList = [\r\n    {\r\n      stateValue: name,\r\n      setStateValue: setName,\r\n      keyName: \"name\",\r\n      label: \"Name\",\r\n      inputType: \"text\",\r\n    },\r\n    {\r\n      stateValue: organisationNr,\r\n      setStateValue: setOrganisationNr,\r\n      keyName: \"organisationNr\",\r\n      label: \"Organization Number\",\r\n      inputType: \"text\",\r\n    },\r\n    {\r\n      stateValue: vatNr,\r\n      setStateValue: setVatNr,\r\n      keyName: \"vatNr\",\r\n      label: \"VAT identification number\",\r\n      inputType: \"text\",\r\n    },\r\n\r\n    {\r\n      stateValue: reference,\r\n      setStateValue: setReference,\r\n      keyName: \"reference\",\r\n      label: \"Reference\",\r\n      inputType: \"text\",\r\n    },\r\n    {\r\n      stateValue: paymentTerm,\r\n      setStateValue: setPaymentTerm,\r\n      keyName: \"paymentTerm\",\r\n      label: \"Payment Term (days)\",\r\n      inputType: \"number\",\r\n    },\r\n    {\r\n      stateValue: website,\r\n      setStateValue: setWebsite,\r\n      keyName: \"website\",\r\n      label: \"Website\",\r\n      inputType: \"text\",\r\n    },\r\n    {\r\n      stateValue: email,\r\n      setStateValue: setEmail,\r\n      keyName: \"email\",\r\n      label: \"Email\",\r\n      inputType: \"email\",\r\n    },\r\n    {\r\n      stateValue: phoneNumber,\r\n      setStateValue: setPhoneNumber,\r\n      keyName: \"phoneNumber\",\r\n      label: \"Phone Number\",\r\n      inputType: \"text\",\r\n    },\r\n  ];\r\n\r\n  function handleEdit(data) {\r\n    const keyName = Object.keys(data)[0];\r\n\r\n    const payload = data;\r\n\r\n    userKit.updateCustomerDetails(customerId, payload).then(() => {\r\n      setEdit({ ...edit, [keyName]: false });\r\n      const setStateFunc = inputList.find((input) => input.keyName === keyName)\r\n        .setStateValue;\r\n\r\n      setStateFunc(data[keyName]);\r\n    });\r\n  }\r\n\r\n  function renderDetails(stateValue, keyName, label, inputType) {\r\n    const validationSchema = yup\r\n      .object()\r\n      .shape({ [keyName]: createCustomerSchema.fields[keyName] });\r\n\r\n    if (edit[keyName]) {\r\n      return (\r\n        <CustomerDetailEdit\r\n          key={`${keyName}Edit`}\r\n          handleEdit={handleEdit}\r\n          keyName={keyName}\r\n          defaultValue={stateValue}\r\n          label={label}\r\n          inputType={inputType}\r\n          schema={validationSchema}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <CustomerDetailInfo\r\n          key={`${keyName}Info`}\r\n          stateValue={stateValue}\r\n          keyName={keyName}\r\n          label={label}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    renderDetails();\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <h3>{name}</h3>\r\n\r\n      {inputList.map((inputItem) => {\r\n        return renderDetails(\r\n          inputItem.stateValue,\r\n          inputItem.keyName,\r\n          inputItem.label,\r\n          inputItem.inputType\r\n        );\r\n      })}\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nexport const buttonCSS = css`\r\n  appearance: none;\r\n  background: rgb(225, 115, 97);\r\n  background: linear-gradient(\r\n    90deg,\r\n    rgba(225, 115, 97, 1) 25%,\r\n    rgba(209, 76, 137, 1) 70%\r\n  );\r\n  border: none;\r\n  border-radius: 50px;\r\n  color: white;\r\n  font-size: 0.8em;\r\n  padding: 0.5em 0.8em;\r\n  transition: all 0.2s ease-in-out;\r\n\r\n  &:hover {\r\n    transform: scale(1.03);\r\n    cursor: pointer;\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  ${buttonCSS}\r\n`;\r\n\r\nexport default function ButtonStyled({ title, onClickFunc }) {\r\n  function handleOnClick() {\r\n    if (onClickFunc) {\r\n      onClickFunc();\r\n    }\r\n  }\r\n\r\n  return <Button onClick={handleOnClick}>{title}</Button>;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CustomerDetails from \"../components/CustomerDetails\";\r\nimport UserKit from \"../data/UserKit\";\r\nimport { EditCustomerContext } from \"../contexts/EditCustomerContext\";\r\nimport styled from \"styled-components\";\r\nimport { buttonCSS } from \"../components/ButtonStyled\";\r\n\r\nconst PageWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst DeleteButton = styled.button`\r\n  ${buttonCSS}\r\n  max-width: 150px;\r\n  align-self: flex-end;\r\n`;\r\n\r\nexport default function CustomerDetailPage(props) {\r\n  const userKit = new UserKit();\r\n  const [customerObj, setCustomerObj] = useState(null);\r\n  const customerId = props.match.params.id;\r\n  const history = useHistory();\r\n\r\n  const [edit, setEdit] = useState({\r\n    name: false,\r\n    organisationNr: false,\r\n    vatNr: false,\r\n    reference: false,\r\n    paymentTerm: false,\r\n    website: false,\r\n    email: false,\r\n    phoneNumber: false,\r\n  });\r\n\r\n  function getCustomer() {\r\n    userKit\r\n      .getCustomerDetails(customerId)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setCustomerObj(data);\r\n      });\r\n  }\r\n  function deleteCustomer() {\r\n    userKit.deleteCustomerDetails(customerId).then(() => history.push(\"/home\"));\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCustomer();\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    <>\r\n      <EditCustomerContext.Provider value={{ edit, setEdit }}>\r\n        <PageWrapper>\r\n          <DeleteButton onClick={deleteCustomer}>Delete Customer</DeleteButton>\r\n          {customerObj && <CustomerDetails customer={customerObj} />}\r\n        </PageWrapper>\r\n      </EditCustomerContext.Provider>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ListItem = styled.li`\r\n  font-size: 16px;\r\n  background-color: ${(props) => props.theme.white};\r\n  color: black;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  box-shadow: 0 2px 4px 0 rgba(201, 201, 201, 0.5);\r\n  a {\r\n    color: black;\r\n    text-decoration: none;\r\n\r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Name = styled.p`\r\n  font-size: 1.5em;\r\n  color: ${(props) => props.theme.mulberry};\r\n`;\r\n\r\nexport default function CustomerListItem({ customer }) {\r\n  const id = customer.id;\r\n  const name = customer.name;\r\n  const organisationNr = customer.organisationNr;\r\n  const reference = customer.reference;\r\n  return (\r\n    <ListItem>\r\n      <Link to={`customer/${id}`}>\r\n        <Name>{name}</Name>\r\n        <p>Org. Nr: {organisationNr}</p>\r\n        <p>Reference: {reference}</p>\r\n      </Link>\r\n    </ListItem>\r\n  );\r\n}\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport UserKit from \"../data/UserKit\";\r\nimport { CustomerListContext } from \"../contexts/CustomerListContext\";\r\nimport CustomerListItem from \"./CustomerListItem\";\r\nimport styled from \"styled-components\";\r\n\r\nconst UlStyled = styled.ul`\r\n  padding: 0;\r\n  display: grid;\r\n  gap: 10px;\r\n  list-style: none;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  padding: 1em;\r\n`;\r\n\r\nexport default function CustomerList() {\r\n  const userKit = new UserKit();\r\n  const { customerList, setCustomerList } = useContext(CustomerListContext);\r\n\r\n  function getCustomerList() {\r\n    userKit\r\n      .getCustomerList()\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setCustomerList(data.results);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCustomerList();\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    <Container>\r\n      <h2>Your Customers</h2>\r\n      <UlStyled>\r\n        {customerList &&\r\n          customerList.map((customer) => {\r\n            const id = customer.id;\r\n\r\n            return <CustomerListItem key={id} customer={customer} />;\r\n          })}\r\n      </UlStyled>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport UserKit from \"../data/UserKit\";\r\nimport { CustomerListContext } from \"../contexts/CustomerListContext\";\r\nimport FormStyledInput from \"./FormStyledInput\";\r\nimport styled from \"styled-components\";\r\nimport ButtonStyled from \"./ButtonStyled\";\r\nimport { createCustomerSchema } from \"../validationSchemas/createCustomerSchema\";\r\n\r\nconst FormWapper = styled.div`\r\n  padding: 1em;\r\n`;\r\nconst FormStyled = styled.form`\r\n  display: grid;\r\n  gap: 8px;\r\n`;\r\n\r\nexport default function FormCreateCustomer() {\r\n  const userKit = new UserKit();\r\n  const { setCustomerList } = useContext(CustomerListContext);\r\n  const { register, handleSubmit, errors, reset } = useForm({\r\n    resolver: yupResolver(createCustomerSchema),\r\n  });\r\n\r\n  function onSubmit(data) {\r\n    userKit.createCustomer(data).then(() => {\r\n      userKit\r\n        .getCustomerList()\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setCustomerList(data.results);\r\n          reset();\r\n        });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <FormWapper>\r\n      <h2>Create a new customer</h2>\r\n      <FormStyled onSubmit={handleSubmit(onSubmit)}>\r\n        <FormStyledInput\r\n          label=\"Name\"\r\n          name=\"name\"\r\n          register={register}\r\n          error={errors.name?.message}\r\n        />\r\n\r\n        <FormStyledInput\r\n          label=\"Organisation Number\"\r\n          name=\"organisationNr\"\r\n          register={register}\r\n          error={errors.organisationNr?.message}\r\n        />\r\n\r\n        <FormStyledInput\r\n          label=\"VAT identification number\"\r\n          name=\"vatNr\"\r\n          placeholder=\"SE999999999901\"\r\n          register={register}\r\n          error={errors.vatNr?.message}\r\n        />\r\n\r\n        <FormStyledInput\r\n          label=\"Reference\"\r\n          name=\"reference\"\r\n          register={register}\r\n        />\r\n        <FormStyledInput\r\n          label=\"Payment Term (days)\"\r\n          name=\"paymentTerm\"\r\n          register={register}\r\n          inputType=\"number\"\r\n          error={errors.paymentTerm?.message}\r\n        />\r\n\r\n        <FormStyledInput\r\n          label=\"Website\"\r\n          name=\"website\"\r\n          placeholder=\"https://example.com\"\r\n          register={register}\r\n          inputType=\"url\"\r\n        />\r\n        <FormStyledInput\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          placeholder=\"org@email.com\"\r\n          register={register}\r\n          inputType=\"email\"\r\n        />\r\n        <FormStyledInput\r\n          label=\"Phone Number\"\r\n          name=\"phoneNumber\"\r\n          register={register}\r\n          inputType=\"tel\"\r\n        />\r\n\r\n        <ButtonStyled type=\"submit\" title=\"Create\" />\r\n      </FormStyled>\r\n    </FormWapper>\r\n  );\r\n}\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CustomerList from \"../components/CustomerList\";\r\nimport FormCreateCustomer from \"../components/FormCreateCustomer\";\r\nimport { UserContext } from \"../contexts/UserContext\";\r\nimport UserKit from \"../data/UserKit\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media screen and (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n\r\n  & > * {\r\n    flex: 1;\r\n  }\r\n`;\r\n\r\nexport default function HomePage() {\r\n  const userKit = new UserKit();\r\n  const { setUser } = useContext(UserContext);\r\n\r\n  useEffect(() => {\r\n    userKit\r\n      .getUser()\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setUser(data);\r\n      });\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <h2>Home</h2>\r\n      <Wrapper>\r\n        <CustomerList />\r\n\r\n        <FormCreateCustomer />\r\n      </Wrapper>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Heading = styled.h2`\r\n  color: ${(props) => props.theme.white};\r\n\r\n  @media only screen and (min-width: 600px) {\r\n  }\r\n`;\r\n\r\nexport default function HeadingPage({ children }) {\r\n  return <Heading>{children}</Heading>;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport FormStyledInput from \"../components/FormStyledInput\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport * as yup from \"yup\";\r\nimport UserKit from \"../data/UserKit\";\r\nimport HeadingPage from \"../atoms/HeadingPage\";\r\nimport { Error } from \"../components/FormStyledInput\";\r\nimport styled from \"styled-components\";\r\nimport ButtonStyled from \"../components/ButtonStyled\";\r\n\r\nconst schema = yup.object().shape({\r\n  email: yup.string().email().required(\"Email is requried.\"),\r\n  password: yup.string().required(\"Password is required.\"),\r\n});\r\n\r\nconst LoginError = styled(Error)`\r\n  font-size: 1em;\r\n`;\r\n\r\nconst FormStyled = styled.form`\r\n  display: grid;\r\n  gap: 8px;\r\n`;\r\n\r\nexport default function LoginPage() {\r\n  const userKit = new UserKit();\r\n\r\n  const { register, handleSubmit, errors, setError } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const history = useHistory();\r\n  const searchString = history.location.search;\r\n  const urlParameters = new URLSearchParams(searchString);\r\n\r\n  const [uid, setUid] = useState(urlParameters.get(\"uid\"));\r\n  const [token, setToken] = useState(urlParameters.get(\"token\"));\r\n\r\n  function handleActivateUser() {\r\n    userKit.activateUser(uid, token).then(() => {\r\n      setUid(null);\r\n      setToken(null);\r\n      history.push(\"/login\");\r\n    });\r\n  }\r\n  function handleLogin(data) {\r\n    const loginEmail = data.email;\r\n    const loginPassword = data.password;\r\n\r\n    userKit.login(loginEmail, loginPassword).then((res) => {\r\n      if (res.ok) {\r\n        res.json().then((data) => {\r\n          userKit.setToken(data.token);\r\n          history.push(\"/home\");\r\n        });\r\n      } else {\r\n        setError(\"credentials\", {\r\n          type: \"manual\",\r\n          message:\r\n            \"Unable to sign in with the credentials provided. Try again.\",\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {uid && token ? (\r\n        <div>\r\n          <HeadingPage>Activate Account</HeadingPage>\r\n          <ButtonStyled\r\n            onClickFunc={handleActivateUser}\r\n            title=\"Activate User\"\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <HeadingPage>Login</HeadingPage>\r\n          <FormStyled onSubmit={handleSubmit(handleLogin)}>\r\n            <LoginError> {errors.credentials?.message}</LoginError>\r\n\r\n            <FormStyledInput\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              placeholder=\"name@email.com\"\r\n              register={register}\r\n              inputType=\"email\"\r\n              error={errors.email?.message}\r\n            />\r\n            <FormStyledInput\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              register={register}\r\n              inputType=\"password\"\r\n              error={errors.password?.message}\r\n            />\r\n\r\n            <ButtonStyled type=\"submit\" title=\"Sign in\" />\r\n          </FormStyled>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import * as yup from \"yup\";\r\n\r\nexport const registerSchema = yup.object().shape({\r\n  firstName: yup\r\n    .string()\r\n    .required(\"First name is required.\")\r\n    .trim()\r\n    .min(1, \"First name must be at least 1 character.\")\r\n    .max(30, `First name can't be more than 30 character.`),\r\n  lastName: yup\r\n    .string()\r\n    .required(\"Last name is required.\")\r\n    .trim()\r\n    .min(1, \"Last name must be at least 1 character.\")\r\n    .max(30, `Last name can't be more than 30 characters.`),\r\n  email: yup.string().email().required(),\r\n  password: yup\r\n    .string()\r\n    .required(\"Password is required.\")\r\n    .min(8, \"Password must be at least 8 characters.\")\r\n    .matches(\r\n      RegExp(/(?!^\\d+$)^.+$/),\r\n      \"The password must not only consist of numbers.\"\r\n    ),\r\n  organisationName: yup.string().required(\"Organisation name is required.\"),\r\n  organisationKind: yup\r\n    .string()\r\n    .required(\"Organisation kind is required.\")\r\n    .trim()\r\n    .length(1, \"Organisation kind must be exactly one character (0, 1 or 2).\")\r\n    .matches(RegExp(/[012]/), \"Organisation kind must be 0, 1 or 2.\"),\r\n});\r\n\r\n// 1234567u: This password is too common\r\n// 1234683u: Godkänt\r\n// email: Un objet user avec ce champ adresse électronique existe déjà. ??\r\n","import { yupResolver } from \"@hookform/resolvers\";\r\nimport React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport UserKit from \"../data/UserKit\";\r\nimport FormStyledInput, { Error } from \"./FormStyledInput\";\r\nimport ButtonStyled from \"./ButtonStyled\";\r\nimport HeadingPage from \"../atoms/HeadingPage\";\r\nimport { registerSchema } from \"../validationSchemas/registerSchema\";\r\nimport styled from \"styled-components\";\r\n\r\nconst RegisterError = styled(Error)`\r\n  font-size: 1em;\r\n`;\r\n\r\nconst FormStyled = styled.form`\r\n  display: grid;\r\n  gap: 8px;\r\n`;\r\n\r\nexport default function FormRegister({ setHasRegistered }) {\r\n  const userKit = new UserKit();\r\n\r\n  const { register, handleSubmit, errors, reset, setError } = useForm({\r\n    resolver: yupResolver(registerSchema),\r\n  });\r\n\r\n  const inputObjects = [\r\n    {\r\n      label: \"First Name\",\r\n      name: \"firstName\",\r\n      error: errors.firstName?.message,\r\n    },\r\n    { label: \"Last Name\", name: \"lastName\", error: errors.lastName?.message },\r\n    {\r\n      label: \"Email\",\r\n      name: \"email\",\r\n      error: errors.email?.message,\r\n      placeholder: \"name@email.com\",\r\n      inputType: \"email\",\r\n    },\r\n    {\r\n      label: \"Password\",\r\n      name: \"password\",\r\n      error: errors.password?.message,\r\n      inputType: \"password\",\r\n    },\r\n    {\r\n      label: \"Organisation Name\",\r\n      name: \"organisationName\",\r\n      error: errors.organisationName?.message,\r\n    },\r\n    {\r\n      label: \"Organisation Kind\",\r\n      name: \"organisationKind\",\r\n      error: errors.organisationKind?.message,\r\n      placeholder: \"0, 1 or 2\",\r\n    },\r\n  ];\r\n\r\n  function handleRegister(data) {\r\n    userKit.checkEmailExits(data.email).then((res) => {\r\n      if (res.ok) {\r\n        // If the email already exists\r\n        setError(\"email\", {\r\n          type: \"manual\",\r\n          message: \"This email is already in use. Please use another one.\",\r\n        });\r\n      } else {\r\n        // If the email is not in use\r\n\r\n        userKit.register(data).then((res) => {\r\n          if (res.ok) {\r\n            setHasRegistered(true);\r\n            reset();\r\n          } else {\r\n            setError(\"registerError\", {\r\n              type: \"manual\",\r\n              message:\r\n                \"Something went wrong with your registration. Please try again.\",\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <HeadingPage>Register</HeadingPage>\r\n      <p>Enter details to register</p>\r\n\r\n      <FormStyled onSubmit={handleSubmit(handleRegister)}>\r\n        <RegisterError> {errors.registerError?.message}</RegisterError>\r\n        {inputObjects.map((inputItem, index) => {\r\n          const myProps = {\r\n            label: inputItem.label,\r\n            name: inputItem.name,\r\n            error: inputItem.error,\r\n            placeholder: inputItem.placeholder,\r\n            inputType: inputItem.inputType,\r\n            register: register,\r\n          };\r\n          return <FormStyledInput {...myProps} key={index} />;\r\n        })}\r\n        <ButtonStyled type=\"submit\" title=\"Register\" />\r\n      </FormStyled>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport FormRegister from \"../components/FormRegister\";\r\n\r\nexport default function RegisterPage() {\r\n  const [hasRegistered, setHasRegistered] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      {hasRegistered && (\r\n        <div>\r\n          <h3>Your account is almost registered!</h3>\r\n          <p>\r\n            You have been sent an email. Click the link in the email to activate\r\n            your account.\r\n          </p>\r\n        </div>\r\n      )}\r\n      <FormRegister setHasRegistered={setHasRegistered}></FormRegister>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport ButtonStyled from \"../components/ButtonStyled\";\r\n\r\nconst PageWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 80vh;\r\n`;\r\nconst Container = styled.div`\r\n  background-color: ${(props) => props.theme.white};\r\n  padding: 2em;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 3px 7px 1px rgba(0, 0, 0, 0.3);\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-template-rows: auto auto auto;\r\n  gap: 1em;\r\n  color: black;\r\n\r\n  a {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-decoration: none;\r\n\r\n    & > * {\r\n      flex: 0.5;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function StartPage() {\r\n  return (\r\n    <PageWrapper>\r\n      <Container>\r\n        <h2>Welcome to Business Management</h2>\r\n\r\n        <Link to=\"/register\">\r\n          <ButtonStyled title=\"Create a new account\" />\r\n        </Link>\r\n\r\n        <Link to=\"/login\">\r\n          <ButtonStyled title=\"Login\" />\r\n        </Link>\r\n      </Container>\r\n    </PageWrapper>\r\n  );\r\n}\r\n","export const summerSky = \"#30a3d8\";\r\nexport const regalBlue = \"#222E60\";\r\nexport const blackcurrant = \"#181341\";\r\nexport const lightSkyBlue = \"#7EC9F4\";\r\nexport const mulberry = \"#D14C89\";\r\nexport const terraCotta = \"#E17361\";\r\nexport const white = \"#FEFEFE\";\r\nexport const whiteSmoke = \"#F9F9F9\";\r\nexport const suvaGrey = \"#929292\";\r\nexport const dodgerBlue = \"#3478F6\";\r\nexport const christalle = \"#4C1A5B\";\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { blackcurrant, white } from \"./theme\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\r\n* {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  font-family: 'Poppins', sans-serif;\r\n}\r\nbody { font-size: 16px; \r\n  background-color: ${blackcurrant};\r\n  color: ${white}\r\n\r\n}\r\ninput, select { font-size: 100%; }\r\n@media screen and (max-width: 767px) {\r\n  input, select, textarea {\r\n    font-size: 16px;\r\n  }\r\n}\r\n`;\r\n","import React, { useState } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport LayoutSimple from \"./components/LayoutSimple\";\nimport { CustomerListContext } from \"./contexts/CustomerListContext\";\nimport { UserContext } from \"./contexts/UserContext\";\nimport CustomerDetailPage from \"./pages/CustomerDetailPage\";\nimport HomePage from \"./pages/HomePage\";\nimport LoginPage from \"./pages/LoginPage\";\nimport RegisterPage from \"./pages/RegisterPage\";\nimport StartPage from \"./pages/StartPage\";\nimport { GlobalStyles } from \"./styles/GlobalStyles\";\n\nfunction App() {\n  const [customerList, setCustomerList] = useState(null);\n  const [user, setUser] = useState(null);\n\n  return (\n    <div>\n      <GlobalStyles></GlobalStyles>\n      <CustomerListContext.Provider value={{ customerList, setCustomerList }}>\n        <UserContext.Provider value={{ user, setUser }}>\n          <LayoutSimple>\n            <Switch>\n              <Route path=\"/customer/:id\" component={CustomerDetailPage} />\n              <Route path=\"/home\" component={HomePage} />\n              <Route path=\"/login\" component={LoginPage} />\n              <Route path=\"/register\" component={RegisterPage} />\n              <Route path=\"/\" component={StartPage} />\n            </Switch>\n          </LayoutSimple>\n        </UserContext.Provider>\n      </CustomerListContext.Provider>\n    </div>\n  );\n}\nexport default App;\n/*\nemail: nackademin@willandskill.se\npassword: js-fend-19\n*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport * as theme from \"./styles/theme\";\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}